{
  "status": 0,
  "data": {
    "Details": {
      "Listening services": {
        "tcp": {
          "443": {
            "Details": "product: Apache httpd version: 2.2.22 extrainfo: (Debian)",
            "Possible vulnerabilities": {
              "CVE-2016-8612": {
                "NIST_URL": "https://nvd.nist.gov/vuln/detail/CVE-2016-8612",
                "Description": "An error was found in protocol parsing logic of mod_cluster load balancer Apache HTTP Server modules. An attacker could use this flaw to cause a Segmentation Fault in the serving httpd process.",
                "Score": {
                  "CVSSv2": 3.3,
                  "CVSSv3": 4.3
                }
              },
              "CVE-2022-37436": {
                "NIST_URL": "https://nvd.nist.gov/vuln/detail/CVE-2022-37436",
                "Description": "Prior to Apache HTTP Server 2.4.55, a malicious backend can cause the response headers to be truncated early, resulting in some headers being incorporated into the response body. If the later headers have any security purpose, they will not be interpreted by the client.",
                "Score": {
                  "CVSSv2": "N.A.",
                  "CVSSv3": 5.3
                }
              },
              "CVE-2006-20001": {
                "NIST_URL": "https://nvd.nist.gov/vuln/detail/CVE-2006-20001",
                "Description": "A carefully crafted If: request header can cause a memory read, or write of a single zero byte, in a pool (heap) memory location beyond the header value sent. This could cause the process to crash. This issue affects Apache HTTP Server 2.4.54 and earlier.",
                "Score": {
                  "CVSSv2": "N.A.",
                  "CVSSv3": 7.5
                }
              },
              "CVE-2021-44790": {
                "NIST_URL": "https://nvd.nist.gov/vuln/detail/CVE-2021-44790",
                "Description": "A carefully crafted request body can cause a buffer overflow in the mod_lua multipart parser (r:parsebody() called from Lua scripts). The Apache httpd team is not aware of an exploit for the vulnerabilty though it might be possible to craft one. This issue affects Apache HTTP Server 2.4.51 and earlier.",
                "Score": {
                  "CVSSv2": 7.5,
                  "CVSSv3": 9.8
                }
              },
              "CVE-2022-22719": {
                "NIST_URL": "https://nvd.nist.gov/vuln/detail/CVE-2022-22719",
                "Description": "A carefully crafted request body can cause a read to a random memory area which could cause the process to crash. This issue affects Apache HTTP Server 2.4.52 and earlier.",
                "Score": {
                  "CVSSv2": 5.0,
                  "CVSSv3": 7.5
                }
              },
              "CVE-2022-22720": {
                "NIST_URL": "https://nvd.nist.gov/vuln/detail/CVE-2022-22720",
                "Description": "Apache HTTP Server 2.4.52 and earlier fails to close inbound connection when errors are encountered discarding the request body, exposing the server to HTTP Request Smuggling",
                "Score": {
                  "CVSSv2": 7.5,
                  "CVSSv3": 9.8
                }
              },
              "CVE-2022-22721": {
                "NIST_URL": "https://nvd.nist.gov/vuln/detail/CVE-2022-22721",
                "Description": "If LimitXMLRequestBody is set to allow request bodies larger than 350MB (defaults to 1M) on 32 bit systems an integer overflow happens which later causes out of bounds writes. This issue affects Apache HTTP Server 2.4.52 and earlier.",
                "Score": {
                  "CVSSv2": 5.8,
                  "CVSSv3": 9.1
                }
              },
              "CVE-2021-34798": {
                "NIST_URL": "https://nvd.nist.gov/vuln/detail/CVE-2021-34798",
                "Description": "Malformed requests may cause the server to dereference a NULL pointer. This issue affects Apache HTTP Server 2.4.48 and earlier.",
                "Score": {
                  "CVSSv2": 5.0,
                  "CVSSv3": 7.5
                }
              },
              "CVE-2021-32791": {
                "NIST_URL": "https://nvd.nist.gov/vuln/detail/CVE-2021-32791",
                "Description": "mod_auth_openidc is an authentication/authorization module for the Apache 2.x HTTP server that functions as an OpenID Connect Relying Party, authenticating users against an OpenID Connect Provider. In mod_auth_openidc before version 2.4.9, the AES GCM encryption in mod_auth_openidc uses a static IV and AAD. It is important to fix because this creates a static nonce and since aes-gcm is a stream cipher, this can lead to known cryptographic issues, since the same key is being reused. From 2.4.9 onwards this has been patched to use dynamic values through usage of cjose AES encryption routines.",
                "Score": {
                  "CVSSv2": 4.3,
                  "CVSSv3": 5.9
                }
              },
              "CVE-2021-39275": {
                "NIST_URL": "https://nvd.nist.gov/vuln/detail/CVE-2021-39275",
                "Description": "ap_escape_quotes() may write beyond the end of a buffer when given malicious input. No included modules pass untrusted data to these functions, but third-party / external modules may. This issue affects Apache HTTP Server 2.4.48 and earlier.",
                "Score": {
                  "CVSSv2": 7.5,
                  "CVSSv3": 9.8
                }
              },
              "CVE-2021-40438": {
                "NIST_URL": "https://nvd.nist.gov/vuln/detail/CVE-2021-40438",
                "Description": "A crafted request uri-path can cause mod_proxy to forward the request to an origin server choosen by the remote user. This issue affects Apache HTTP Server 2.4.48 and earlier.",
                "Score": {
                  "CVSSv2": 6.8,
                  "CVSSv3": 9.0
                }
              },
              "CVE-2008-0455": {
                "NIST_URL": "https://nvd.nist.gov/vuln/detail/CVE-2008-0455",
                "Description": "Cross-site scripting (XSS) vulnerability in the mod_negotiation module in the Apache HTTP Server 2.2.6 and earlier in the 2.2.x series, 2.0.61 and earlier in the 2.0.x series, and 1.3.39 and earlier in the 1.3.x series allows remote authenticated users to inject arbitrary web script or HTML by uploading a file with a name containing XSS sequences and a file extension, which leads to injection within a (1) \"406 Not Acceptable\" or (2) \"300 Multiple Choices\" HTTP response when the extension is omitted in a request for the file.",
                "Score": {
                  "CVSSv2": 4.3,
                  "CVSSv3": "N.A."
                }
              },
              "CVE-2014-0098": {
                "NIST_URL": "https://nvd.nist.gov/vuln/detail/CVE-2014-0098",
                "Description": "The log_cookie function in mod_log_config.c in the mod_log_config module in the Apache HTTP Server before 2.4.8 allows remote attackers to cause a denial of service (segmentation fault and daemon crash) via a crafted cookie that is not properly handled during truncation.",
                "Score": {
                  "CVSSv2": 5.0,
                  "CVSSv3": "N.A."
                }
              },
              "CVE-2012-0883": {
                "NIST_URL": "https://nvd.nist.gov/vuln/detail/CVE-2012-0883",
                "Description": "envvars (aka envvars-std) in the Apache HTTP Server before 2.4.2 places a zero-length directory name in the LD_LIBRARY_PATH, which allows local users to gain privileges via a Trojan horse DSO in the current working directory during execution of apachectl.",
                "Score": {
                  "CVSSv2": 6.9,
                  "CVSSv3": "N.A."
                }
              },
              "CVE-2013-1862": {
                "NIST_URL": "https://nvd.nist.gov/vuln/detail/CVE-2013-1862",
                "Description": "mod_rewrite.c in the mod_rewrite module in the Apache HTTP Server 2.2.x before 2.2.25 writes data to a log file without sanitizing non-printable characters, which might allow remote attackers to execute arbitrary commands via an HTTP request containing an escape sequence for a terminal emulator.",
                "Score": {
                  "CVSSv2": 5.1,
                  "CVSSv3": "N.A."
                }
              },
              "CVE-2013-1896": {
                "NIST_URL": "https://nvd.nist.gov/vuln/detail/CVE-2013-1896",
                "Description": "mod_dav.c in the Apache HTTP Server before 2.2.25 does not properly determine whether DAV is enabled for a URI, which allows remote attackers to cause a denial of service (segmentation fault) via a MERGE request in which the URI is configured for handling by the mod_dav_svn module, but a certain href attribute in XML data refers to a non-DAV URI.",
                "Score": {
                  "CVSSv2": 4.3,
                  "CVSSv3": "N.A."
                }
              },
              "CVE-2013-6438": {
                "NIST_URL": "https://nvd.nist.gov/vuln/detail/CVE-2013-6438",
                "Description": "The dav_xml_get_cdata function in main/util.c in the mod_dav module in the Apache HTTP Server before 2.4.8 does not properly remove whitespace characters from CDATA sections, which allows remote attackers to cause a denial of service (daemon crash) via a crafted DAV WRITE request.",
                "Score": {
                  "CVSSv2": 5.0,
                  "CVSSv3": "N.A."
                }
              },
              "CVE-2014-0118": {
                "NIST_URL": "https://nvd.nist.gov/vuln/detail/CVE-2014-0118",
                "Description": "The deflate_in_filter function in mod_deflate.c in the mod_deflate module in the Apache HTTP Server before 2.4.10, when request body decompression is enabled, allows remote attackers to cause a denial of service (resource consumption) via crafted request data that decompresses to a much larger size.",
                "Score": {
                  "CVSSv2": 4.3,
                  "CVSSv3": "N.A."
                }
              },
              "CVE-2014-0226": {
                "NIST_URL": "https://nvd.nist.gov/vuln/detail/CVE-2014-0226",
                "Description": "Race condition in the mod_status module in the Apache HTTP Server before 2.4.10 allows remote attackers to cause a denial of service (heap-based buffer overflow), or possibly obtain sensitive credential information or execute arbitrary code, via a crafted request that triggers improper scoreboard handling within the status_handler function in modules/generators/mod_status.c and the lua_ap_scoreboard_worker function in modules/lua/lua_request.c.",
                "Score": {
                  "CVSSv2": 6.8,
                  "CVSSv3": "N.A."
                }
              },
              "CVE-2016-5387": {
                "NIST_URL": "https://nvd.nist.gov/vuln/detail/CVE-2016-5387",
                "Description": "The Apache HTTP Server through 2.4.23 follows RFC 3875 section 4.1.18 and therefore does not protect applications from the presence of untrusted client data in the HTTP_PROXY environment variable, which might allow remote attackers to redirect an application's outbound HTTP traffic to an arbitrary proxy server via a crafted Proxy header in an HTTP request, aka an \"httpoxy\" issue.  NOTE: the vendor states \"This mitigation has been assigned the identifier CVE-2016-5387\"; in other words, this is not a CVE ID for a vulnerability.",
                "Score": {
                  "CVSSv2": 6.8,
                  "CVSSv3": 8.1
                }
              },
              "CVE-2016-8743": {
                "NIST_URL": "https://nvd.nist.gov/vuln/detail/CVE-2016-8743",
                "Description": "Apache HTTP Server, in all releases prior to 2.2.32 and 2.4.25, was liberal in the whitespace accepted from requests and sent in response lines and headers. Accepting these different behaviors represented a security concern when httpd participates in any chain of proxies or interacts with back-end application servers, either through mod_proxy or using conventional CGI mechanisms, and may result in request smuggling, response splitting and cache pollution.",
                "Score": {
                  "CVSSv2": 5.0,
                  "CVSSv3": 7.5
                }
              },
              "CVE-2022-28614": {
                "NIST_URL": "https://nvd.nist.gov/vuln/detail/CVE-2022-28614",
                "Description": "The ap_rwrite() function in Apache HTTP Server 2.4.53 and earlier may read unintended memory if an attacker can cause the server to reflect very large input using ap_rwrite() or ap_rputs(), such as with mod_luas r:puts() function. Modules compiled and distributed separately from Apache HTTP Server that use the 'ap_rputs' function and may pass it a very large (INT_MAX or larger) string must be compiled against current headers to resolve the issue.",
                "Score": {
                  "CVSSv2": 5.0,
                  "CVSSv3": 5.3
                }
              },
              "CVE-2022-29404": {
                "NIST_URL": "https://nvd.nist.gov/vuln/detail/CVE-2022-29404",
                "Description": "In Apache HTTP Server 2.4.53 and earlier, a malicious request to a lua script that calls r:parsebody(0) may cause a denial of service due to no default limit on possible input size.",
                "Score": {
                  "CVSSv2": 5.0,
                  "CVSSv3": 7.5
                }
              },
              "CVE-2022-28615": {
                "NIST_URL": "https://nvd.nist.gov/vuln/detail/CVE-2022-28615",
                "Description": "Apache HTTP Server 2.4.53 and earlier may crash or disclose information due to a read beyond bounds in ap_strcmp_match() when provided with an extremely large input buffer. While no code distributed with the server can be coerced into such a call, third-party modules or lua scripts that use ap_strcmp_match() may hypothetically be affected.",
                "Score": {
                  "CVSSv2": 6.4,
                  "CVSSv3": 9.1
                }
              },
              "CVE-2022-31813": {
                "NIST_URL": "https://nvd.nist.gov/vuln/detail/CVE-2022-31813",
                "Description": "Apache HTTP Server 2.4.53 and earlier may not send the X-Forwarded-* headers to the origin server based on client side Connection header hop-by-hop mechanism. This may be used to bypass IP based authentication on the origin server/application.",
                "Score": {
                  "CVSSv2": 7.5,
                  "CVSSv3": 9.8
                }
              },
              "CVE-2022-30556": {
                "NIST_URL": "https://nvd.nist.gov/vuln/detail/CVE-2022-30556",
                "Description": "Apache HTTP Server 2.4.53 and earlier may return lengths to applications calling r:wsread() that point past the end of the storage allocated for the buffer.",
                "Score": {
                  "CVSSv2": 5.0,
                  "CVSSv3": 7.5
                }
              },
              "CVE-2022-28330": {
                "NIST_URL": "https://nvd.nist.gov/vuln/detail/CVE-2022-28330",
                "Description": "Apache HTTP Server 2.4.53 and earlier on Windows may read beyond bounds when configured to process requests with the mod_isapi module.",
                "Score": {
                  "CVSSv2": 5.0,
                  "CVSSv3": 5.3
                }
              },
              "CVE-2021-32792": {
                "NIST_URL": "https://nvd.nist.gov/vuln/detail/CVE-2021-32792",
                "Description": "mod_auth_openidc is an authentication/authorization module for the Apache 2.x HTTP server that functions as an OpenID Connect Relying Party, authenticating users against an OpenID Connect Provider. In mod_auth_openidc before version 2.4.9, there is an XSS vulnerability in when using `OIDCPreservePost On`.",
                "Score": {
                  "CVSSv2": 4.3,
                  "CVSSv3": 6.1
                }
              },
              "CVE-2021-32786": {
                "NIST_URL": "https://nvd.nist.gov/vuln/detail/CVE-2021-32786",
                "Description": "mod_auth_openidc is an authentication/authorization module for the Apache 2.x HTTP server that functions as an OpenID Connect Relying Party, authenticating users against an OpenID Connect Provider. In versions prior to 2.4.9, `oidc_validate_redirect_url()` does not parse URLs the same way as most browsers do. As a result, this function can be bypassed and leads to an Open Redirect vulnerability in the logout functionality. This bug has been fixed in version 2.4.9 by replacing any backslash of the URL to redirect with slashes to address a particular breaking change between the different specifications (RFC2396 / RFC3986 and WHATWG). As a workaround, this vulnerability can be mitigated by configuring `mod_auth_openidc` to only allow redirection whose destination matches a given regular expression.",
                "Score": {
                  "CVSSv2": 5.8,
                  "CVSSv3": 6.1
                }
              },
              "CVE-2021-32785": {
                "NIST_URL": "https://nvd.nist.gov/vuln/detail/CVE-2021-32785",
                "Description": "mod_auth_openidc is an authentication/authorization module for the Apache 2.x HTTP server that functions as an OpenID Connect Relying Party, authenticating users against an OpenID Connect Provider. When mod_auth_openidc versions prior to 2.4.9 are configured to use an unencrypted Redis cache (`OIDCCacheEncrypt off`, `OIDCSessionType server-cache`, `OIDCCacheType redis`), `mod_auth_openidc` wrongly performed argument interpolation before passing Redis requests to `hiredis`, which would perform it again and lead to an uncontrolled format string bug. Initial assessment shows that this bug does not appear to allow gaining arbitrary code execution, but can reliably provoke a denial of service by repeatedly crashing the Apache workers. This bug has been corrected in version 2.4.9 by performing argument interpolation only once, using the `hiredis` API. As a workaround, this vulnerability can be mitigated by setting `OIDCCacheEncrypt` to `on`, as cache keys are cryptographically hashed before use when this option is enabled.",
                "Score": {
                  "CVSSv2": 4.3,
                  "CVSSv3": 7.5
                }
              },
              "CVE-2013-5704": {
                "NIST_URL": "https://nvd.nist.gov/vuln/detail/CVE-2013-5704",
                "Description": "The mod_headers module in the Apache HTTP Server 2.2.22 allows remote attackers to bypass \"RequestHeader unset\" directives by placing a header in the trailer portion of data sent with chunked transfer coding.  NOTE: the vendor states \"this is not a security issue in httpd as such.\"",
                "Score": {
                  "CVSSv2": 5.0,
                  "CVSSv3": "N.A."
                }
              },
              "CVE-2018-1303": {
                "NIST_URL": "https://nvd.nist.gov/vuln/detail/CVE-2018-1303",
                "Description": "A specially crafted HTTP request header could have crashed the Apache HTTP Server prior to version 2.4.30 due to an out of bound read while preparing data to be cached in shared memory. It could be used as a Denial of Service attack against users of mod_cache_socache. The vulnerability is considered as low risk since mod_cache_socache is not widely used, mod_cache_disk is not concerned by this vulnerability.",
                "Score": {
                  "CVSSv2": 5.0,
                  "CVSSv3": 7.5
                }
              },
              "CVE-2018-1302": {
                "NIST_URL": "https://nvd.nist.gov/vuln/detail/CVE-2018-1302",
                "Description": "When an HTTP/2 stream was destroyed after being handled, the Apache HTTP Server prior to version 2.4.30 could have written a NULL pointer potentially to an already freed memory. The memory pools maintained by the server make this vulnerability hard to trigger in usual configurations, the reporter and the team could not reproduce it outside debug builds, so it is classified as low risk.",
                "Score": {
                  "CVSSv2": 4.3,
                  "CVSSv3": 5.9
                }
              },
              "CVE-2018-1301": {
                "NIST_URL": "https://nvd.nist.gov/vuln/detail/CVE-2018-1301",
                "Description": "A specially crafted request could have crashed the Apache HTTP Server prior to version 2.4.30, due to an out of bound access after a size limit is reached by reading the HTTP header. This vulnerability is considered very hard if not impossible to trigger in non-debug mode (both log and build level), so it is classified as low risk for common server usage.",
                "Score": {
                  "CVSSv2": 4.3,
                  "CVSSv3": 5.9
                }
              },
              "CVE-2017-9798": {
                "NIST_URL": "https://nvd.nist.gov/vuln/detail/CVE-2017-9798",
                "Description": "Apache httpd allows remote attackers to read secret data from process memory if the Limit directive can be set in a user's .htaccess file, or if httpd.conf has certain misconfigurations, aka Optionsbleed. This affects the Apache HTTP Server through 2.2.34 and 2.4.x through 2.4.27. The attacker sends an unauthenticated OPTIONS HTTP request when attempting to read secret data. This is a use-after-free issue and thus secret data is not always sent, and the specific data depends on many factors including configuration. Exploitation with .htaccess can be blocked with a patch to the ap_limit_section function in server/core.c.",
                "Score": {
                  "CVSSv2": 5.0,
                  "CVSSv3": 7.5
                }
              },
              "CVE-2017-9788": {
                "NIST_URL": "https://nvd.nist.gov/vuln/detail/CVE-2017-9788",
                "Description": "In Apache httpd before 2.2.34 and 2.4.x before 2.4.27, the value placeholder in [Proxy-]Authorization headers of type 'Digest' was not initialized or reset before or between successive key=value assignments by mod_auth_digest. Providing an initial key with no '=' assignment could reflect the stale value of uninitialized pool memory used by the prior request, leading to leakage of potentially confidential information, and a segfault in other cases resulting in denial of service.",
                "Score": {
                  "CVSSv2": 6.4,
                  "CVSSv3": 9.1
                }
              },
              "CVE-2017-7679": {
                "NIST_URL": "https://nvd.nist.gov/vuln/detail/CVE-2017-7679",
                "Description": "In Apache httpd 2.2.x before 2.2.33 and 2.4.x before 2.4.26, mod_mime can read one byte past the end of a buffer when sending a malicious Content-Type response header.",
                "Score": {
                  "CVSSv2": 7.5,
                  "CVSSv3": 9.8
                }
              },
              "CVE-2017-3169": {
                "NIST_URL": "https://nvd.nist.gov/vuln/detail/CVE-2017-3169",
                "Description": "In Apache httpd 2.2.x before 2.2.33 and 2.4.x before 2.4.26, mod_ssl may dereference a NULL pointer when third-party modules call ap_hook_process_connection() during an HTTP request to an HTTPS port.",
                "Score": {
                  "CVSSv2": 7.5,
                  "CVSSv3": 9.8
                }
              },
              "CVE-2017-3167": {
                "NIST_URL": "https://nvd.nist.gov/vuln/detail/CVE-2017-3167",
                "Description": "In Apache httpd 2.2.x before 2.2.33 and 2.4.x before 2.4.26, use of the ap_get_basic_auth_pw() by third-party modules outside of the authentication phase may lead to authentication requirements being bypassed.",
                "Score": {
                  "CVSSv2": 7.5,
                  "CVSSv3": 9.8
                }
              },
              "CVE-2016-4975": {
                "NIST_URL": "https://nvd.nist.gov/vuln/detail/CVE-2016-4975",
                "Description": "Possible CRLF injection allowing HTTP response splitting attacks for sites which use mod_userdir. This issue was mitigated by changes made in 2.4.25 and 2.2.32 which prohibit CR or LF injection into the \"Location\" or other outbound header key or value. Fixed in Apache HTTP Server 2.4.25 (Affected 2.4.1-2.4.23). Fixed in Apache HTTP Server 2.2.32 (Affected 2.2.0-2.2.31).",
                "Score": {
                  "CVSSv2": 4.3,
                  "CVSSv3": 6.1
                }
              },
              "CVE-2015-3183": {
                "NIST_URL": "https://nvd.nist.gov/vuln/detail/CVE-2015-3183",
                "Description": "The chunked transfer coding implementation in the Apache HTTP Server before 2.4.14 does not properly parse chunk headers, which allows remote attackers to conduct HTTP request smuggling attacks via a crafted request, related to mishandling of large chunk-size values and invalid chunk-extension characters in modules/http/http_filters.c.",
                "Score": {
                  "CVSSv2": 5.0,
                  "CVSSv3": "N.A."
                }
              },
              "CVE-2015-0228": {
                "NIST_URL": "https://nvd.nist.gov/vuln/detail/CVE-2015-0228",
                "Description": "The lua_websocket_read function in lua_request.c in the mod_lua module in the Apache HTTP Server through 2.4.12 allows remote attackers to cause a denial of service (child-process crash) by sending a crafted WebSocket Ping frame after a Lua script has called the wsupgrade function.",
                "Score": {
                  "CVSSv2": 5.0,
                  "CVSSv3": "N.A."
                }
              },
              "CVE-2014-0231": {
                "NIST_URL": "https://nvd.nist.gov/vuln/detail/CVE-2014-0231",
                "Description": "The mod_cgid module in the Apache HTTP Server before 2.4.10 does not have a timeout mechanism, which allows remote attackers to cause a denial of service (process hang) via a request to a CGI script that does not read from its stdin file descriptor.",
                "Score": {
                  "CVSSv2": 5.0,
                  "CVSSv3": "N.A."
                }
              },
              "CVE-2012-4558": {
                "NIST_URL": "https://nvd.nist.gov/vuln/detail/CVE-2012-4558",
                "Description": "Multiple cross-site scripting (XSS) vulnerabilities in the balancer_handler function in the manager interface in mod_proxy_balancer.c in the mod_proxy_balancer module in the Apache HTTP Server 2.2.x before 2.2.24-dev and 2.4.x before 2.4.4 allow remote attackers to inject arbitrary web script or HTML via a crafted string.",
                "Score": {
                  "CVSSv2": 4.3,
                  "CVSSv3": "N.A."
                }
              },
              "CVE-2012-3499": {
                "NIST_URL": "https://nvd.nist.gov/vuln/detail/CVE-2012-3499",
                "Description": "Multiple cross-site scripting (XSS) vulnerabilities in the Apache HTTP Server 2.2.x before 2.2.24-dev and 2.4.x before 2.4.4 allow remote attackers to inject arbitrary web script or HTML via vectors involving hostnames and URIs in the (1) mod_imagemap, (2) mod_info, (3) mod_ldap, (4) mod_proxy_ftp, and (5) mod_status modules.",
                "Score": {
                  "CVSSv2": 4.3,
                  "CVSSv3": "N.A."
                }
              },
              "CVE-2012-2687": {
                "NIST_URL": "https://nvd.nist.gov/vuln/detail/CVE-2012-2687",
                "Description": "Multiple cross-site scripting (XSS) vulnerabilities in the make_variant_list function in mod_negotiation.c in the mod_negotiation module in the Apache HTTP Server 2.4.x before 2.4.3, when the MultiViews option is enabled, allow remote attackers to inject arbitrary web script or HTML via a crafted filename that is not properly handled during construction of a variant list.",
                "Score": {
                  "CVSSv2": 2.6,
                  "CVSSv3": "N.A."
                }
              }
            }
          }
        }
      },
      "Operating System": {
        "Possible vulnerabilities": {},
        "Details": ""
      }
    },
    "Summary of vulnerabilities found": {
      "os": 0,
      "tcp": 46
    }
  }
}
